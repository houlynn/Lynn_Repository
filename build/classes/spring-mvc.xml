<?xml version="1.0" encoding="UTF-8"?>
<!-- -DispatcherServlet application context for DeclareOnline's web tier. 
	springmvc 的 DispatcherServlet 对应的配置文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!--使用依赖控制器类名字的惯例，将URI映射到控制器(开启注解的另一种方式) -->
	<!-- <beanclass="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/> 
		<beanclass="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/> 
		启动SpringMVC的注解功能，完成请求和注解POJO的映射 <beanclass="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/> -->

	<!--静态资源访问 -->
	<mvc:resources location="/skin/" mapping="/skin/**" />

	<!--定义Spring MVC 的模板文件 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--支持JSTL -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<!--模板的路径 -->
		<property name="prefix" value="/" />
		<!--模板文件后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Spring MVC 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8">
		<property name="maxUploadSize">
			<value>10485760000</value>
		</property>
		<property name="maxInMemorySize">
			<value>40960</value>
		</property>
	</bean>
		<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
	
		<mvc:interceptor>
			<mvc:mapping path="/*/*.action"/>
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
				<bean class="org.yingqu.desktop.security.AccessControllerFilter"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	    <!-- <bean class = "com.sinaapp.zhangziyou.common.EncodingPostProcessor"
        /> -->
        <bean id="stringHttpMessageConverter"    class="org.springframework.http.converter.StringHttpMessageConverter">
 
            <property name="supportedMediaTypes">
                <list>
                    <value>text/html;charset=UTF-8</value>
                    <value>text/plain;charset=UTF-8</value>
                    <value>application/json;charset=UTF-8</value>
                </list>
            </property>
        </bean>
         
     
         
    <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter" />
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
 
    </bean>
	
	
	
	
	
</beans>